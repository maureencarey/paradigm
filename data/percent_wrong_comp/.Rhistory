# only Pf and Pb prints true, manage alt splicing different results
# if one transcript is essential, say gene is essenial
Pf_s = unique(Pf_s); dupe = Pf_s[,c('gene')] # select columns to check duplicates
temp1 = Pf_s[duplicated(dupe) | duplicated(dupe, fromLast=TRUE),]
Pf_s = Pf_s[!(Pf_s$gene %in% levels(as.factor(as.character(temp1$gene)))),]
for (i in 1:length(levels(as.factor(as.character(temp1$gene))))) {
Pf_s = rbind(Pf_s, c(levels(as.factor(as.character(temp1$gene)))[i],0)) }
Pf_g = unique(Pf_g); dupe = Pf_g[,c('gene')] # select columns to check duplicates
temp = Pf_g[duplicated(dupe) | duplicated(dupe, fromLast=TRUE),]
Pf_g = Pf_g[!(Pf_g$gene %in% levels(as.factor(as.character(temp$gene)))),]
for (i in 1:length(levels(as.factor(as.character(temp$gene))))) {
Pf_g = rbind(Pf_g, c(levels(as.factor(as.character(temp$gene)))[i],0)) }
Pb_s = unique(Pb_s); dupe = Pb_s[,c('gene')] # select columns to check duplicates
temp1 = Pb_s[duplicated(dupe) | duplicated(dupe, fromLast=TRUE),]
Pb_s = Pb_s[!(Pb_s$gene %in% levels(as.factor(as.character(temp1$gene)))),]
for (i in 1:length(levels(as.factor(as.character(temp1$gene))))) {
Pb_s = rbind(Pb_s, c(levels(as.factor(as.character(temp1$gene)))[i],0)) }
Pb_g = unique(Pb_g); dupe = Pb_g[,c('gene')] # select columns to check duplicates
temp = Pb_g[duplicated(dupe) | duplicated(dupe, fromLast=TRUE),]
Pb_g = Pb_g[!(Pb_g$gene %in% levels(as.factor(as.character(temp$gene)))),]
for (i in 1:length(levels(as.factor(as.character(temp$gene))))) {
Pb_g = rbind(Pb_g, c(levels(as.factor(as.character(temp$gene)))[i],0)) }
rownames(Ch) = Ch$gene
rownames(Cp) = Cp$gene
rownames(Pf_g) = Pf_g$gene
rownames(Pf_s) = Pf_s$gene
rownames(Pb_g) = Pb_g$gene
rownames(Pb_s) = Pb_s$gene
rownames(Pv_g) = Pv_g$gene
rownames(Pv_s) = Pv_s$gene
rownames(TgME49) = TgME49$gene
rownames(TgGT1) = TgGT1$gene
rownames(Pc_g) = Pc_g$X
rownames(Pc_s) = Pc_s$X
rownames(Pk_g) = Pk_g$X
rownames(Pk_s) = Pk_s$X
rownames(Pc_noO_g) = Pc_noO_g$X
rownames(Pc_noO_s) = Pc_noO_s$X
rownames(Pk_noO_g) = Pk_noO_g$X
rownames(Pk_noO_s) = Pk_noO_s$X
rownames(Pf_noO_g) = Pf_noO_g$X
rownames(Pf_noO_s) = Pf_noO_s$X
rownames(Pb_noO_g) = Pb_noO_g$X
rownames(Pb_noO_s) = Pb_noO_s$X
rownames(Pv_noO_g) = Pv_noO_g$X
rownames(Pv_noO_s) = Pv_noO_s$X
# merge with de novo model results (GT1)
df_Tg = merge(Tg_KOresults, TgGT1, by = 'row.names', all = T)
rownames(df_Tg) = df_Tg$Row.names; df_Tg$Row.names = NULL
colnames(df_Tg)[3] = 'experimental_essentiality'; colnames(df_Tg)[5] = 'KO_relative_growth_GT1'
df_Tg$mean.phenotype = NULL; df_Tg$gene = NULL
# remove genes that haven't been evaluated in experimental system
df_Tg = df_Tg[!is.na(df_Tg$experimental_essentiality),]
# remove non metabolic genes from consideration
df_Tg = df_Tg[rowSums(!is.na(df_Tg))>1,]
df_Tg$KO_relative_growth_GT1 = as.numeric(as.character(df_Tg$KO_relative_growth_GT1))
df_Tg$experimental_essentiality = as.numeric(as.character(df_Tg$experimental_essentiality))
df_Tg = df_Tg %>% mutate(
# interpret results
de_novo_TgGT1_essentiality = ifelse(is.na(KO_relative_growth_GT1),NA, ifelse(KO_relative_growth_GT1 < 0.1, 1, 0)),
Tg2015_essentiality = ifelse(is.na(KO_relative_growth_Tg2015),NA, ifelse(KO_relative_growth_Tg2015 < 0.1, 1, 0)),
# de novo GT1 biomass
true_essential_TgGT1 = ifelse(de_novo_TgGT1_essentiality == 1 & experimental_essentiality == 1, 1, 0),
true_nonessential_TgGT1 = ifelse(de_novo_TgGT1_essentiality == 0 & experimental_essentiality == 0, 1, 0),
false_essential_TgGT1 = ifelse(de_novo_TgGT1_essentiality == 1 & experimental_essentiality == 0, 1, 0),
false_nonessential_TgGT1 = ifelse(de_novo_TgGT1_essentiality == 0 & experimental_essentiality == 1,1,0)
)
df_Tg = df_Tg %>% mutate(
de_novo_TgGT1_essentiality = ifelse(is.na(KO_relative_growth_GT1),NA, ifelse(KO_relative_growth_GT1 < 0.1, 1, 0)),
true_essential_TgGT1 = ifelse(de_novo_TgGT1_essentiality == 1 & experimental_essentiality == 1, 1, 0),
true_nonessential_TgGT1 = ifelse(de_novo_TgGT1_essentiality == 0 & experimental_essentiality == 0, 1, 0),
false_essential_TgGT1 = ifelse(de_novo_TgGT1_essentiality == 1 & experimental_essentiality == 0, 1, 0),
false_nonessential_TgGT1 = ifelse(de_novo_TgGT1_essentiality == 0 & experimental_essentiality == 1,1,0),
)
sensitivity_TgGT1 = (sum(df_Tg$true_essential_TgGT1))/total # true positive rate, the recall
total = dim(df_Tg)[1]
sensitivity_TgGT1 = (sum(df_Tg$true_essential_TgGT1))/total # true positive rate, the recall
specificity_TgGT1 = (sum(df_Tg$true_nonessential_TgGT1))/total# true negative rate
df_Pf = merge(Pf_KOresults, iPfal18, by = 'row.names', all = T)
df_Pf = merge(Pf_KOresults, Pf_g, by = 'row.names', all = T)#iPfal18, by = 'row.names', all = T)
rownames(df_Pf) = df_Pf$Row.names; df_Pf$Row.names = NULL
colnames(df_Pf)[3] = 'experimental_essentiality';
colnames(df_Pf)[5] =
'KO_relative_growth_de_novo_GENERIC'
df_Pf$Gene.Identification = NULL
df_Pf$gene = NULL
df_Pf$Gene_ID = NULL
df_Pf = merge(df_Pf, Pf_s, by = 'row.names', all = T)
rownames(df_Pf) = df_Pf$Row.names; df_Pf$Row.names = NULL; df_Pf$gene = NULL
colnames(df_Pf)
colnames(df_Pf)[3] = 'KO_relative_growth_de_novo_SPECIES'
# remove genes that haven't been evaluated in experimental system
df_Pf = df_Pf[!is.na(df_Pf$experimental_essentiality),]
# remove non metabolic genes from consideration
df_Pf = df_Pf[rowSums(!is.na(df_Pf))>1,]
df_Pf$KO_relative_growth_de_novo_GENERIC = as.numeric(as.character(df_Pf$KO_relative_growth_de_novo_GENERIC))
df_Pf$KO_relative_growth_de_novo_SPECIES = as.numeric(as.character(df_Pf$KO_relative_growth_de_novo_SPECIES))
df_Pf$experimental_essentiality = as.numeric(as.character(df_Pf$experimental_essentiality))
df_Pf = df_Pf %>% mutate(
# interpret results
de_novo_generic_essentiality = ifelse(is.na(KO_relative_growth_de_novo_GENERIC),NA, ifelse(KO_relative_growth_de_novo_GENERIC < 0.1, 1, 0)),
de_novo_species_essentiality = ifelse(is.na(KO_relative_growth_de_novo_SPECIES),NA, ifelse(KO_relative_growth_de_novo_SPECIES < 0.1, 1, 0)),
# de novo generic biomass
true_essential_de_novo_GENERIC = ifelse(de_novo_generic_essentiality == 1 & experimental_essentiality == 1,1,0),
true_nonessential_de_novo_GENERIC = ifelse(de_novo_generic_essentiality == 0 & experimental_essentiality == 0,1,0),
false_essential_de_novo_GENERIC = ifelse(de_novo_generic_essentiality == 1 & experimental_essentiality == 0,1,0),
false_nonessential_de_novo_GENERIC = ifelse(de_novo_generic_essentiality == 0 & experimental_essentiality == 1,1,0),
# de novo species biomass
true_essential_de_novo_SPECIES = ifelse(de_novo_species_essentiality == 1 & experimental_essentiality == 1, 1, 0),
true_nonessential_de_novo_SPECIES = ifelse(de_novo_species_essentiality == 0 & experimental_essentiality == 0, 1, 0),
false_essential_de_novo_SPECIES = ifelse(de_novo_species_essentiality == 1 & experimental_essentiality == 0, 1, 0),
false_nonessential_de_novo_SPECIES = ifelse(de_novo_species_essentiality == 0 & experimental_essentiality == 1, 1, 0),
df_Pf = df_Pf %>% mutate(
# interpret results
de_novo_generic_essentiality = ifelse(is.na(KO_relative_growth_de_novo_GENERIC),NA, ifelse(KO_relative_growth_de_novo_GENERIC < 0.1, 1, 0)),
de_novo_species_essentiality = ifelse(is.na(KO_relative_growth_de_novo_SPECIES),NA, ifelse(KO_relative_growth_de_novo_SPECIES < 0.1, 1, 0)),
iPfal18_essentiality = ifelse(is.na(KO_relative_growth_iPfal18),NA, ifelse(KO_relative_growth_iPfal18 < 0.1, 1, 0)),
iPfa2017_essentiality = ifelse(is.na(KO_relative_growth_iPfa2017),NA, ifelse(KO_relative_growth_iPfa2017 < 0.1, 1, 0)),
Pf2018_essentiality = ifelse(is.na(KO_relative_growth_Pf2018),NA,  ifelse(KO_relative_growth_Pf2018 < 0.1, 1, 0)),
# de novo generic biomass
true_essential_de_novo_GENERIC = ifelse(de_novo_generic_essentiality == 1 & experimental_essentiality == 1,1,0),
true_nonessential_de_novo_GENERIC = ifelse(de_novo_generic_essentiality == 0 & experimental_essentiality == 0,1,0),
false_essential_de_novo_GENERIC = ifelse(de_novo_generic_essentiality == 1 & experimental_essentiality == 0,1,0),
false_nonessential_de_novo_GENERIC = ifelse(de_novo_generic_essentiality == 0 & experimental_essentiality == 1,1,0),
# de novo species biomass
true_essential_de_novo_SPECIES = ifelse(de_novo_species_essentiality == 1 & experimental_essentiality == 1, 1, 0),
true_nonessential_de_novo_SPECIES = ifelse(de_novo_species_essentiality == 0 & experimental_essentiality == 0, 1, 0),
false_essential_de_novo_SPECIES = ifelse(de_novo_species_essentiality == 1 & experimental_essentiality == 0, 1, 0),
false_nonessential_de_novo_SPECIES = ifelse(de_novo_species_essentiality == 0 & experimental_essentiality == 1, 1, 0),
# iPfal18
true_essential_iPfal18 = ifelse(iPfal18_essentiality == 1 & experimental_essentiality == 1, 1, 0),
true_nonessential_iPfal18 = ifelse(iPfal18_essentiality == 0 & experimental_essentiality == 0, 1, 0),
false_essential_iPfal18 = ifelse(iPfal18_essentiality == 1 & experimental_essentiality == 0, 1, 0),
false_nonessential_iPfal18 = ifelse(iPfal18_essentiality == 0 & experimental_essentiality == 1, 1, 0),
# iPfa2017
true_essential_iPfa2017 = ifelse(iPfa2017_essentiality == 1 & experimental_essentiality == 1, 1, 0),
true_nonessential_iPfa2017 = ifelse(iPfa2017_essentiality == 0 & experimental_essentiality == 0, 1, 0),
false_essential_iPfa2017 = ifelse(iPfa2017_essentiality == 1 & experimental_essentiality == 0, 1, 0),
false_nonessential_iPfa2017 = ifelse(iPfa2017_essentiality == 0 & experimental_essentiality == 1, 1, 0),
# pf2018
true_essential_Pf2018 = ifelse(Pf2018_essentiality == 1 & experimental_essentiality == 1, 1, 0),
true_nonessential_Pf2018 = ifelse(Pf2018_essentiality == 0 & experimental_essentiality == 0, 1, 0),
false_essential_Pf2018 = ifelse(Pf2018_essentiality == 1 & experimental_essentiality == 0, 1, 0),
false_nonessential_Pf2018 = ifelse(Pf2018_essentiality == 0 & experimental_essentiality == 1,1,0),
# dependency on biomass?
biomass_dependent = ifelse(is.na(de_novo_species_essentiality) | is.na(de_novo_generic_essentiality), NA,
ifelse(de_novo_species_essentiality == de_novo_generic_essentiality, 0, 1))
)
))
ggplot(data = df_melt,
aes(x = Var1, y = Var2, fill = ifelse(value>3000,'red',
ifelse(value<1000,'green',
ifelse(value<2000,'black', 'gray'))))) +
geom_tile() +
#scale_fill_continuous(na.value = 'white') +
scale_fill_manual(values = c('skyblue2', 'royalblue2','lightblue', 'royalblue4'), na.value = 'white') +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 1, vjust = 1),
axis.text.y = element_text(size = 7),
legend.position="bottom",
plot.margin = unit(c(0, 0.5, 0, 0), "cm")) +
xlab(NULL) + guides(fill = F) +
geom_text(aes(label = round(value, 1))) +
ggtitle(NULL) + ylab(NULL)
library(reshape2)
df = read.csv("/Users/maureencarey/local_documents/work/comparative_parasite_models/paradigm/data/rxn_essentiality_matrix_jan.csv")
df2 = read.csv("/Users/maureencarey/local_documents/work/comparative_parasite_models/paradigm/data/rxn_essentiality_matrix_interpreted_jan.csv")
rownames(df) = df$X; df$X = NULL
colnames(df) = sub("_generic_biomass", "", colnames(df))
rownames(df2) = df2$X; df2$X = NULL
#df = df[, -c(4,6,8)]
sum_df <- data.frame(matrix(data=NA,nrow=ncol(df2),ncol=5))
colnames(sum_df) = c('Species','biomass','lethal','nonlethal','percent')
for (x in 1:ncol(df2)) {
sum_df$Species[x] = strsplit(colnames(df2)[x], split = '_')[[1]][1]
sum_df$biomass[x] = strsplit(colnames(df2)[x], split = '_')[[1]][2]
sum_df$lethal[x] = table(df2[,x])[[1]]
sum_df$nonlethal[x] = table(df2[,x])[[2]]
sum_df$percent[x] = sum_df$lethal[x]/(sum_df$lethal[x]+sum_df$nonlethal[x])
}
library(cluster)
df = df[,2:ncol(df)] # get rid of TgRH
df = df[,c(1,2,3,5,7,9,10)]# use only models with the same biomass
df_use = t(df)
dist_df = daisy(df_use)
df_to_melt = as.matrix(dist_df)
df_to_melt[upper.tri(df_to_melt)] <- NA
df_melt = melt(as.matrix(df_to_melt))
ggplot(data = df_melt,
aes(x = Var1, y = Var2, fill = ifelse(value>3000,'red',
ifelse(value<1000,'green',
ifelse(value<2000,'black', 'gray'))))) +
geom_tile() +
#scale_fill_continuous(na.value = 'white') +
scale_fill_manual(values = c('skyblue2', 'royalblue2','lightblue', 'royalblue4'), na.value = 'white') +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 1, vjust = 1),
axis.text.y = element_text(size = 7),
legend.position="bottom",
plot.margin = unit(c(0, 0.5, 0, 0), "cm")) +
xlab(NULL) + guides(fill = F) +
geom_text(aes(label = round(value, 1))) +
ggtitle(NULL) + ylab(NULL)
ggplot(data = df_melt,
aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
#scale_fill_continuous(na.value = 'white') +
#scale_fill_manual(values = c('skyblue2', 'royalblue2','lightblue', 'royalblue4'), na.value = 'white') +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 1, vjust = 1),
axis.text.y = element_text(size = 7),
legend.position="bottom",
plot.margin = unit(c(0, 0.5, 0, 0), "cm")) +
xlab(NULL) + guides(fill = F) +
#geom_text(aes(label = round(value, 1))) +
ggtitle(NULL) + ylab(NULL)
ggplot(data = df_melt,
aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_continuous(na.value = 'white') +
#scale_fill_manual(values = c('skyblue2', 'royalblue2','lightblue', 'royalblue4'), na.value = 'white') +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 1, vjust = 1),
axis.text.y = element_text(size = 7),
legend.position="bottom",
plot.margin = unit(c(0, 0.5, 0, 0), "cm")) +
xlab(NULL) + guides(fill = F) +
#geom_text(aes(label = round(value, 1))) +
ggtitle(NULL) + ylab(NULL)
ggplot(data = df_melt,
aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_continuous(low = "white", high = "black",na.value = 'white') +
#scale_fill_manual(values = c('skyblue2', 'royalblue2','lightblue', 'royalblue4'), na.value = 'white') +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 1, vjust = 1),
axis.text.y = element_text(size = 7),
legend.position="bottom",
plot.margin = unit(c(0, 0.5, 0, 0), "cm")) +
xlab(NULL) + guides(fill = F) +
#geom_text(aes(label = round(value, 1))) +
ggtitle(NULL) + ylab(NULL)
ggplot(data = df_melt,
aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_continuous(low = "white", high = "black",na.value = 'white') +
#scale_fill_manual(values = c('skyblue2', 'royalblue2','lightblue', 'royalblue4'), na.value = 'white') +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 1, vjust = 1),
axis.text.y = element_text(size = 7),
legend.position="bottom",
plot.margin = unit(c(0, 0.5, 0, 0), "cm")) +
xlab(NULL) + guides(fill = F) +
#geom_text(aes(label = round(value, 1))) +
ggtitle(NULL) + ylab(NULL) +coord_flip()
ggplot(data = df_melt,
aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_continuous(low = "white", high = "black",na.value = 'white') +
#scale_fill_manual(values = c('skyblue2', 'royalblue2','lightblue', 'royalblue4'), na.value = 'white') +
theme(axis.text.x = element_text(position = "top",size = 7, angle = 45, hjust = 1, vjust = 1),
axis.text.y = element_text(size = 7),
legend.position="bottom",
plot.margin = unit(c(0, 0.5, 0, 0), "cm")) +
xlab(NULL) + guides(fill = F) +
#geom_text(aes(label = round(value, 1))) +
ggtitle(NULL) + ylab(NULL) +coord_flip()
ggplot(data = df_melt,
aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_continuous(low = "white", high = "black",na.value = 'white')
ggplot(data = df_melt,
aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_continuous(low = "white", high = "black",na.value = 'white') +
scale_x_discrete(position = "top")
ggplot(data = df_melt,
aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_continuous(low = "white", high = "black",na.value = 'white') +
scale_x_discrete(position = "top") +
#scale_fill_manual(values = c('skyblue2', 'royalblue2','lightblue', 'royalblue4'), na.value = 'white') +
theme(axis.text.x = element_text(position = "top",size = 7, angle = 45, hjust = 1, vjust = 1),
axis.text.y = element_text(size = 7),
legend.position="bottom",
plot.margin = unit(c(0, 0.5, 0, 0), "cm")) +
xlab(NULL) + guides(fill = F) +
#geom_text(aes(label = round(value, 1))) +
ggtitle(NULL) + ylab(NULL)
ggplot(data = df_melt,
aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_continuous(low = "white", high = "black",na.value = 'white') +
scale_x_discrete(position = "top")
ggplot(data = df_melt,
aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_continuous(low = "white", high = "black",na.value = 'white') +
scale_x_discrete(position = "top") +
#scale_fill_manual(values = c('skyblue2', 'royalblue2','lightblue', 'royalblue4'), na.value = 'white') +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 1, vjust = 1),
axis.text.y = element_text(size = 7),
legend.position="bottom",
plot.margin = unit(c(0, 0.5, 0, 0), "cm")) +
xlab(NULL) + guides(fill = F) +
#geom_text(aes(label = round(value, 1))) +
ggtitle(NULL) + ylab(NULL)
ggplot(data = df_melt,
aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_continuous(low = "white", high = "black",na.value = 'white') +
scale_x_discrete(position = "top") +
#scale_fill_manual(values = c('skyblue2', 'royalblue2','lightblue', 'royalblue4'), na.value = 'white') +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = -1, vjust = -1),
axis.text.y = element_text(size = 7),
legend.position="bottom",
plot.margin = unit(c(0, 0.5, 0, 0), "cm")) +
xlab(NULL) + guides(fill = F) +
#geom_text(aes(label = round(value, 1))) +
ggtitle(NULL) + ylab(NULL)
ggplot(data = df_melt,
aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_continuous(low = "white", high = "black",na.value = 'white') +
scale_x_discrete(position = "top") +
#scale_fill_manual(values = c('skyblue2', 'royalblue2','lightblue', 'royalblue4'), na.value = 'white') +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = -1, vjust = 0),
axis.text.y = element_text(size = 7),
legend.position="bottom",
plot.margin = unit(c(0, 0.5, 0, 0), "cm")) +
xlab(NULL) + guides(fill = F) +
#geom_text(aes(label = round(value, 1))) +
ggtitle(NULL) + ylab(NULL)
ggplot(data = df_melt,
aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_continuous(low = "white", high = "black",na.value = 'white') +
scale_x_discrete(position = "top") +
#scale_fill_manual(values = c('skyblue2', 'royalblue2','lightblue', 'royalblue4'), na.value = 'white') +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 0, vjust = 0),
axis.text.y = element_text(size = 7),
legend.position="bottom",
plot.margin = unit(c(0, 0.5, 0, 0), "cm")) +
xlab(NULL) + guides(fill = F) +
#geom_text(aes(label = round(value, 1))) +
ggtitle(NULL) + ylab(NULL)
df_to_melt = as.matrix(dist_df)
df_to_melt[!upper.tri(df_to_melt)] <- NA
df_melt = melt(as.matrix(df_to_melt))
ggplot(data = df_melt,
aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_continuous(low = "white", high = "black",na.value = 'white') +
scale_x_discrete(position = "top") +
#scale_fill_manual(values = c('skyblue2', 'royalblue2','lightblue', 'royalblue4'), na.value = 'white') +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 0, vjust = 0),
axis.text.y = element_text(size = 7),
legend.position="bottom",
plot.margin = unit(c(0, 0.5, 0, 0), "cm")) +
xlab(NULL) + guides(fill = F) +
#geom_text(aes(label = round(value, 1))) +
ggtitle(NULL) + ylab(NULL)
ggplot(data = df_melt,
aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_continuous(low = "white", high = "black",na.value = 'white') +
scale_x_discrete(position = "top") +
#scale_fill_manual(values = c('skyblue2', 'royalblue2','lightblue', 'royalblue4'), na.value = 'white') +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 0, vjust = 0),
axis.text.y = element_text(size = 7),
legend.position="bottom",
plot.margin = unit(c(0, 0.5, 0, 0), "cm")) + theme_bw()+
xlab(NULL) + guides(fill = F) +
#geom_text(aes(label = round(value, 1))) +
ggtitle(NULL) + ylab(NULL)
ggplot(data = df_melt,
aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_continuous(low = "white", high = "black",na.value = 'white') +
scale_x_discrete(position = "top") +
theme_bw()+
#scale_fill_manual(values = c('skyblue2', 'royalblue2','lightblue', 'royalblue4'), na.value = 'white') +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 0, vjust = 0),
axis.text.y = element_text(size = 7),
legend.position="bottom",
plot.margin = unit(c(0, 0.5, 0, 0), "cm")) +
xlab(NULL) + guides(fill = F) +
#geom_text(aes(label = round(value, 1))) +
ggtitle(NULL) + ylab(NULL)
ggplot(data = df_melt,
aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_continuous(low = "white", high = "black",na.value = 'white') +
scale_x_discrete(position = "top") +
theme_bw()+
#scale_fill_manual(values = c('skyblue2', 'royalblue2','lightblue', 'royalblue4'), na.value = 'white') +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 0, vjust = 0),
axis.text.y = element_text(size = 7),
legend.position="bottom",
plot.margin = unit(c(0, 0.5, 0, 0), "cm"),
plot.background = element_blank()) +
xlab(NULL) + guides(fill = F) +
#geom_text(aes(label = round(value, 1))) +
ggtitle(NULL) + ylab(NULL)
ggplot(data = df_melt,
aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_continuous(low = "white", high = "black",na.value = 'white') +
scale_x_discrete(position = "top") +
theme_bw()+
#scale_fill_manual(values = c('skyblue2', 'royalblue2','lightblue', 'royalblue4'), na.value = 'white') +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 0, vjust = 0),
axis.text.y = element_text(size = 7),
legend.position="bottom",
plot.margin = unit(c(0, 0.5, 0, 0), "cm"),
plot.border = element_blank()) +
xlab(NULL) + guides(fill = F) +
#geom_text(aes(label = round(value, 1))) +
ggtitle(NULL) + ylab(NULL)
ggplot(data = df_melt,
aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_continuous(low = "white", high = "black",na.value = 'white') +
scale_x_discrete(position = "top") +
theme_bw()+
#scale_fill_manual(values = c('skyblue2', 'royalblue2','lightblue', 'royalblue4'), na.value = 'white') +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 0, vjust = 0),
axis.text.y = element_text(size = 7),
legend.position="bottom",
plot.margin = unit(c(0, 0.5, 0, 0), "cm"),
panel.background = element_blank()) +
xlab(NULL) + guides(fill = F) +
#geom_text(aes(label = round(value, 1))) +
ggtitle(NULL) + ylab(NULL)
ggplot(data = df_melt,
aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_continuous(low = "white", high = "black",na.value = 'white') +
scale_x_discrete(position = "top") +
theme_bw()+
#scale_fill_manual(values = c('skyblue2', 'royalblue2','lightblue', 'royalblue4'), na.value = 'white') +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 0, vjust = 0),
axis.text.y = element_text(size = 7),
legend.position="bottom",
plot.margin = unit(c(0, 0.5, 0, 0), "cm"),
panel.border = element_blank()) +
xlab(NULL) + guides(fill = F) +
#geom_text(aes(label = round(value, 1))) +
ggtitle(NULL) + ylab(NULL)
ggplot(data = df_melt,
aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_continuous(low = "white", high = "black",na.value = 'white') +
scale_x_discrete(position = "top") +
theme_bw()+
#scale_fill_manual(values = c('skyblue2', 'royalblue2','lightblue', 'royalblue4'), na.value = 'white') +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 0, vjust = 0),
axis.text.y = element_text(size = 7),
axis.ticks = element_blank(),
legend.position="bottom",
plot.margin = unit(c(0, 0.5, 0, 0), "cm"),
panel.border = element_blank()) +
xlab(NULL) + guides(fill = F) +
#geom_text(aes(label = round(value, 1))) +
ggtitle(NULL) + ylab(NULL)
ggplot(data = df_melt,
aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_continuous(low = "white", high = "black",na.value = 'white') +
scale_x_discrete(position = "top") +
theme_bw()+
#scale_fill_manual(values = c('skyblue2', 'royalblue2','lightblue', 'royalblue4'), na.value = 'white') +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 0, vjust = 0),
axis.text.y = element_text(size = 7),
axis.ticks.x = element_blank(),
legend.position="bottom",
plot.margin = unit(c(0, 0.5, 0, 0), "cm"),
panel.border = element_blank()) +
xlab(NULL) + guides(fill = F) +
#geom_text(aes(label = round(value, 1))) +
ggtitle(NULL) + ylab(NULL)
ggsave("~/local_documents/work/comparative_parasite_models/paradigm_manuscript/figures/fig3/essentiality_heatmap.pdf",width = 5,height = 5,units = "in",dpi = 600)
df_to_melt = as.matrix(dist_df)
df_to_melt[upper.tri(df_to_melt)] <- NA
df_melt = melt(as.matrix(df_to_melt))
ggplot(data = df_melt,
aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_continuous(low = "white", high = "black",na.value = 'white') +
scale_x_discrete(position = "top") +
theme_bw()+
#scale_fill_manual(values = c('skyblue2', 'royalblue2','lightblue', 'royalblue4'), na.value = 'white') +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 0, vjust = 0),
axis.text.y = element_text(size = 7),
axis.ticks.x = element_blank(),
legend.position="bottom",
plot.margin = unit(c(0, 0.5, 0, 0), "cm"),
panel.border = element_blank()) +
xlab(NULL) + guides(fill = F) +
#geom_text(aes(label = round(value, 1))) +
ggtitle(NULL) + ylab(NULL)
ggplot(data = df_melt,
aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_continuous(low = "white", high = "black",na.value = 'white') +
scale_y_discrete(position = "right") +
theme_bw()+
#scale_fill_manual(values = c('skyblue2', 'royalblue2','lightblue', 'royalblue4'), na.value = 'white') +
theme(axis.text.x = element_text(size = 7, angle = 45, hjust = 0, vjust = 0),
axis.text.y = element_text(size = 7),
axis.ticks.x = element_blank(),
legend.position="bottom",
plot.margin = unit(c(0, 0.5, 0, 0), "cm"),
panel.border = element_blank()) +
xlab(NULL) + guides(fill = F) +
#geom_text(aes(label = round(value, 1))) +
ggtitle(NULL) + ylab(NULL)
ggsave("~/local_documents/work/comparative_parasite_models/paradigm_manuscript/figures/fig3/essentiality_heatmap.pdf",width = 5,height = 5,units = "in",dpi = 600)
