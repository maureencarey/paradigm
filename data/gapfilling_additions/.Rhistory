'Plasmodium cynomolgi','Plasmodium cynomolgi','Plasmodium cynomolgi','Plasmodium cynomolgi','Plasmodium cynomolgi',
'Plasmodium knowlesi','Plasmodium knowlesi','Plasmodium knowlesi','Plasmodium knowlesi','Plasmodium knowlesi',
'Plasmodium vivax','Plasmodium vivax','Plasmodium vivax','Plasmodium vivax','Plasmodium vivax')
df[,2] = c('iPfal18','iPfa2017','Pf2018',
'Pf3D7','Pf','Pf','Pf',
'Pb2018','Pb','Pb','Pb','Pb',
'Pc2018','Pc','Pc','Pc','Pc',
'Pk2018','Pk','Pk','Pk','Pk',
'Pv2018','Pv','Pv','Pv','Pv')
df[,3] = c('published','published','published',
'generic','species','generic','species',
'published','generic','species','generic','species',
'published','generic','species','generic','species',
'published','generic','species','generic','species',
'published','generic','species','generic','species')
df[,4] = c(length(rxns_iPfal18$X0),length(rxns_iPfa17$X0),length(rxns_Pf2018$X0),
length(rxns_Pf_g$X0),length(rxns_Pf_s$X0),length(rxns_Pf_g_noO$X0),length(rxns_Pf_s_noO$X0),
length(rxns_Pb2018$X0),length(rxns_Pb_g$X0),length(rxns_Pb_s$X0),length(rxns_Pb_g_noO$X0),length(rxns_Pb_s_noO$X0),
length(rxns_Pc2018$X0),length(rxns_Pc_g$X0),length(rxns_Pc_s$X0),length(rxns_Pc_g_noO$X0),length(rxns_Pc_s_noO$X0),
length(rxns_Pk2018$X0),length(rxns_Pk_g$X0),length(rxns_Pk_s$X0),length(rxns_Pk_g_noO$X0),length(rxns_Pk_s_noO$X0),
length(rxns_Pv2018$X0),length(rxns_Pv_g$X0),length(rxns_Pv_s$X0),length(rxns_Pv_g_noO$X0),length(rxns_Pv_s_noO$X0))
df[,5] = c(NA,NA,NA,
T,T,F,F,
NA,T,T,F,F,
NA,T,T,F,F,
NA,T,T,F,F,
NA,T,T,F,F)
df[,6] = c(nrow(iPfal18),nrow(iPfa2017),nrow(Pf2018),
nrow(Pf_g),nrow(Pf_s),nrow(Pf_noO_g),nrow(Pf_noO_s),
nrow(Pb2018),nrow(Pb_g),nrow(Pb_s),nrow(Pb_noO_g),nrow(Pb_noO_s),
nrow(Pc2018),nrow(Pc_g),nrow(Pc_s),nrow(Pc_noO_g),nrow(Pc_noO_s),
nrow(Pk2018),nrow(Pk_g),nrow(Pk_s),nrow(Pk_noO_g),nrow(Pk_noO_s),
nrow(Pv2018),nrow(Pv_g),nrow(Pv_s),nrow(Pv_noO_g),nrow(Pv_noO_s))
df_smaller1 = df[!is.na(df$orthology),]
df_smaller1 = df_smaller1[df_smaller1$model == 'Pf3D7',]
df_smaller1a = df_smaller1[df_smaller1$biomass == 'generic',]
df_smaller1b = df_smaller1[df_smaller1$biomass == 'species',]
df_smaller2 = df[!is.na(df$orthology),]
df_smaller2 = df_smaller2[df_smaller2$model != 'PcANKA',]
df_smaller2a = df_smaller2[df_smaller2$biomass == 'generic',]
df_smaller2b = df_smaller2[df_smaller2$biomass == 'species',]
df_smaller3 = df[!is.na(df$orthology),]
df_smaller3 = df_smaller3[df_smaller3$model != 'Pc',]
df_smaller3a = df_smaller3[df_smaller3$biomass == 'generic',]
df_smaller3b = df_smaller3[df_smaller3$biomass == 'species',]
df_smaller4 = df[!is.na(df$orthology),]
df_smaller4 = df_smaller4[df_smaller4$model != 'Pk',]
df_smaller4a = df_smaller4[df_smaller4$biomass == 'generic',]
df_smaller4b = df_smaller4[df_smaller4$biomass == 'species',]
df_smaller5 = df[!is.na(df$orthology),]
df_smaller5 = df_smaller5[df_smaller5$model != 'Pv',]
df_smaller5a = df_smaller5[df_smaller5$biomass == 'generic',]
df_smaller5b = df_smaller5[df_smaller5$biomass == 'species',]
ggplot() +
geom_point(data = df, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species,  shape = biomass), alpha = 0.4) +
geom_line(data = df_smaller1a, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller1b, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller2a, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller2b, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller3a, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller3b, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller4a, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller4b, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller5a, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller5b, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_label(data = df, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species, label = model), size = 2) +
guides(color = F, shape = F) +
xlab('no. genes in model') + ylab('no. reactions in model')
cbPalette
cbPalette = brewer.pal(n = 5, name = 'Dark2')
cbPalette
cbPalette = c("#1B9E77","#D95F02","#7570B3","#E7298A","#66A61E")
ggplot() +
geom_point(data = df, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species,  shape = biomass), alpha = 0.4) +
scale_color_manual(values = cbPalette) +
geom_line(data = df_smaller1a, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller1b, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller2a, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller2b, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller3a, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller3b, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller4a, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller4b, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller5a, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller5b, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_label(data = df, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species, label = model), size = 2) +
guides(color = F, shape = F) +
xlab('no. genes in model') + ylab('no. reactions in model')
cbPalette = brewer.pal(n = 9, name = 'Dark2')
cbPalette = brewer.pal(n = 8, name = 'Dark2')
cbPalette
cbPalette = c("#1B9E77","#D95F02","#7570B3","#666666",#E7298A)
geom_point(data = df, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species,  shape = biomass), alpha = 0.4) +
)
cbPalette = c("#1B9E77","#D95F02","#7570B3","#666666","#E7298A")
ggplot() +
geom_point(data = df, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species,  shape = biomass), alpha = 0.4) +
scale_color_manual(values = cbPalette) +
geom_line(data = df_smaller1a, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller1b, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller2a, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller2b, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller3a, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller3b, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller4a, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller4b, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller5a, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller5b, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_label(data = df, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species, label = model), size = 2) +
guides(color = F, shape = F) +
xlab('no. genes in model') + ylab('no. reactions in model')
cbPalette = brewer.pal(n = 8, name = 'Dark2')
cbPalette
cbPalette = c("#1B9E77","#D95F02","#D95F02","#666666","#E7298A")
ggplot() +
geom_point(data = df, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species,  shape = biomass), alpha = 0.4) +
scale_color_manual(values = cbPalette) +
geom_line(data = df_smaller1a, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller1b, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller2a, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller2b, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller3a, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller3b, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller4a, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller4b, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller5a, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller5b, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_label(data = df, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species, label = model), size = 2) +
guides(color = F, shape = F) +
xlab('no. genes in model') + ylab('no. reactions in model')
cbPalette = brewer.pal(n = 8, name = 'Dark2')
cbPalette
cbPalette = c("#1B9E77","#7570B3","#D95F02","#666666","#E7298A")
ggplot() +
geom_point(data = df, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species,  shape = biomass), alpha = 0.4) +
scale_color_manual(values = cbPalette) +
geom_line(data = df_smaller1a, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller1b, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller2a, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller2b, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller3a, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller3b, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller4a, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller4b, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller5a, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_line(data = df_smaller5b, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species)) +
geom_label(data = df, aes(x = `no. genes in model`, y = `no. reactions in model`, color = species, label = model), size = 2) +
guides(color = F, shape = F) +
xlab('no. genes in model') + ylab('no. reactions in model')
ggsave("~/local_documents/work/comparative_parasite_models/paradigm_manuscript/figures/supplemental_figure_compare_models_gene_rxn_numbers.pdf")
Tg2015 = read.csv("/Users/maureencarey/local_documents/work/comparative_parasite_models/paradigm/data/rxn_essentiality_matrix_tg2015.csv",
stringsAsFactors = F)
head(Tg2015)
# get rid of reaction IDs for Toxoplasma gondii
Tg2015$X <- gsub("R[0-9][0-9][0-9][0-9][0-9]_", "", Tg2015$X)
Tg2015$X <- gsub("EXP_[0-9]_", "", Tg2015$X)
Tg2015$X <- gsub("_m", "", Tg2015$X)
Tg2015$X <- gsub("_a", "", Tg2015$X)
Tg2015$X <- gsub("_c", "", Tg2015$X)
Tg2015$X <- gsub("a", "", Tg2015$X)
Tg2015 = Tg2015[grep('TGME49',Tg2015$X),]
head(Tg2015)
# check if alternative splicing yields alt results for anything else
length(unique(Tg2015$X))<length(Tg2015$X)
Tg2015 = unique(Tg2015)
length(unique(Tg2015$X))<length(Tg2015$X)
colnames(Tg2015) = c('gene','KO_relative_growth')
Tg2015$KO_relative_growth = sapply(Tg2015$KO_relative_growth, function(x) {round(x, digits = n)})
rownames(Tg2015) = Tg2015$gene
levels(as.factor(Tg2015$KO_relative_growth))
# merge with de novo model results (GT1)
df_Tg = merge(Tg_KOresults, TgGT1, by = 'row.names', all = T)
rownames(df_Tg) = df_Tg$Row.names; df_Tg$Row.names = NULL
colnames(df_Tg)[3] = 'experimental_essentiality'; colnames(df_Tg)[5] = 'KO_relative_growth_GT1'
df_Tg$mean.phenotype = NULL; df_Tg$gene = NULL
# merge with published model results
df_Tg = merge(df_Tg, Tg2015, by = 'row.names', all = T)
rownames(df_Tg) = df_Tg$Row.names; df_Tg$Row.names = NULL
df_Tg$ID = NULL; df_Tg$gene = NULL;
colnames(df_Tg)[3] = 'KO_relative_growth_Tg2015'
dim(df_Tg)
# remove genes that haven't been evaluated in experimental system
df_Tg = df_Tg[!is.na(df_Tg$experimental_essentiality),]
dim(df_Tg)
# remove non metabolic genes from consideration
df_Tg = df_Tg[rowSums(!is.na(df_Tg))>1,]
dim(df_Tg)
df_Tg$KO_relative_growth_GT1 = as.numeric(as.character(df_Tg$KO_relative_growth_GT1))
df_Tg$KO_relative_growth_Tg2015 = as.numeric(as.character(df_Tg$KO_relative_growth_Tg2015))
df_Tg$experimental_essentiality = as.numeric(as.character(df_Tg$experimental_essentiality))
setdiff(TgGT1$gene,rownames(df_Tg))
setdiff(Tg2015$gene,rownames(df_Tg))
df_Tg = df_Tg %>% mutate(
# interpret results
de_novo_TgGT1_essentiality = ifelse(is.na(KO_relative_growth_GT1),NA, ifelse(KO_relative_growth_GT1 < 0.1, 1, 0)),
Tg2015_essentiality = ifelse(is.na(KO_relative_growth_Tg2015),NA, ifelse(KO_relative_growth_Tg2015 < 0.1, 1, 0)),
# de novo GT1 biomass
true_essential_TgGT1 = ifelse(de_novo_TgGT1_essentiality == 1 & experimental_essentiality == 1, 1, 0),
true_nonessential_TgGT1 = ifelse(de_novo_TgGT1_essentiality == 0 & experimental_essentiality == 0, 1, 0),
false_essential_TgGT1 = ifelse(de_novo_TgGT1_essentiality == 1 & experimental_essentiality == 0, 1, 0),
false_nonessential_TgGT1 = ifelse(de_novo_TgGT1_essentiality == 0 & experimental_essentiality == 1,1,0),
# Tg2015
true_essential_Tg2015 = ifelse(Tg2015_essentiality == 1 & experimental_essentiality == 1, 1, 0),
true_nonessential_Tg2015 = ifelse(Tg2015_essentiality == 0 & experimental_essentiality == 0, 1, 0),
false_essential_Tg2015 = ifelse(Tg2015_essentiality == 1 & experimental_essentiality == 0, 1, 0),
false_nonessential_Tg2015 = ifelse(Tg2015_essentiality == 0 & experimental_essentiality == 1, 1, 0)
)
total = dim(df_Tg)[1]
sensitivity_TgGT1 = (sum(df_Tg$true_essential_TgGT1))/total # true positive rate, the recall
specificity_TgGT1 = (sum(df_Tg$true_nonessential_TgGT1))/total# true negative rate
sensitivity_Tg2015 = (sum(df_Tg$true_essential_Tg2015))/total # true positive rate, the recall
specificity_Tg2015 = (sum(df_Tg$true_nonessential_Tg2015))/total# true negative rate
specificity_Tg2015
sensitivity_Tg2015
sensitivity_TgGT1 = (sum(df_Tg$true_essential_TgGT1, na.rm =T))/total # true positive rate, the recall
specificity_TgGT1 = (sum(df_Tg$true_nonessential_TgGT1, na.rm =T))/total# true negative rate
sensitivity_Tg2015 = (sum(df_Tg$true_essential_Tg2015, na.rm =T))/total # true positive rate, the recall
specificity_Tg2015 = (sum(df_Tg$true_nonessential_Tg2015, na.rm =T))/total# true negative rate
total = dim(df_Tg)[1]
sensitivity_TgGT1 = (sum(df_Tg$true_essential_TgGT1, na.rm =T))/total # true positive rate, the recall
specificity_TgGT1 = (sum(df_Tg$true_nonessential_TgGT1, na.rm =T))/total# true negative rate
sensitivity_Tg2015 = (sum(df_Tg$true_essential_Tg2015, na.rm =T))/total # true positive rate, the recall
specificity_Tg2015 = (sum(df_Tg$true_nonessential_Tg2015, na.rm =T))/total# true negative rate
specificity_Tg2015
sensitivity_Tg2015
specificity_TgGT1
sensitivity_TgGT1
total
df = as.data.frame(matrix(data = NA, nrow = 14, ncol = 7))
colnames(df) = c('species', 'model', 'biomass', 'sensitivity','specificity','orthology','no. genes in model')
df[,1] = c('Toxoplasma gondii','Toxoplasma gondii',
'Plasmodium falciparum','Plasmodium falciparum','Plasmodium falciparum','Plasmodium falciparum','Plasmodium falciparum','Plasmodium falciparum','Plasmodium falciparum',
'Plasmodium berghei','Plasmodium berghei','Plasmodium berghei','Plasmodium berghei','Plasmodium berghei')
df[,2] = c('TgGT1','Tg2015',
'iPfal18','iPfa2017','Pf2018','Pf3D7','Pf3D7','Pf3D7','Pf3D7',
'Pb2018','PbANKA','PbANKA','PbANKA','PbANKA')
df[,3] = c('generic','published',
'published','published','published','generic','species','generic','species',
'published','generic','species','generic','species')
df[,4] = c(sensitivity_TgGT1,sensitivity_Tg2015,sensitivity_Pf_no_ortho_GENERIC
sensitivity_iPfal18,sensitivity_iPfa2017,sensitivity_Pf2018,sensitivity_Pf_de_novo_GENERIC,sensitivity_Pf_de_novo_SPECIES,
sensitivity_Pf_no_ortho_GENERIC,sensitivity_Pf_no_ortho_SPECIES,
sensitivity_Pb2018,sensitivity_Pb_de_novo_GENERIC,sensitivity_Pb_de_novo_SPECIES,
sensitivity_Pb_no_ortho_GENERIC,sensitivity_Pb_no_ortho_SPECIES)
df[,4] = c(sensitivity_TgGT1,sensitivity_Tg2015,
sensitivity_iPfal18,sensitivity_iPfa2017,sensitivity_Pf2018,sensitivity_Pf_de_novo_GENERIC,sensitivity_Pf_de_novo_SPECIES,
sensitivity_Pf_no_ortho_GENERIC,sensitivity_Pf_no_ortho_SPECIES,
sensitivity_Pb2018,sensitivity_Pb_de_novo_GENERIC,sensitivity_Pb_de_novo_SPECIES,
sensitivity_Pb_no_ortho_GENERIC,sensitivity_Pb_no_ortho_SPECIES)
df[,5] = c(specificity_TgGT1,specificity_Tg2015,
specificity_iPfal18,specificity_iPfa2017,specificity_Pf2018,specificity_Pf_de_novo_GENERIC,specificity_Pf_de_novo_SPECIES,
specificity_Pf_no_ortho_GENERIC,specificity_Pf_no_ortho_SPECIES,
specificity_Pb2018,specificity_Pb_de_novo_GENERIC,specificity_Pb_de_novo_SPECIES,
specificity_Pb_no_ortho_GENERIC,specificity_Pb_no_ortho_SPECIES)
df[,6] = c(NA,NA,
NA,NA,NA,T,T,F,F,
NA,T,T,F,F)
df[,7] = c(nrow(TgGT1),NA, # nrow(Tg2015),
nrow(iPfa2017),nrow(iPfal18),nrow(Pf2018),nrow(Pf_g),nrow(Pf_s),nrow(Pf_noO_g),nrow(Pf_noO_s),
nrow(Pb2018),nrow(Pb_g),nrow(Pb_s),nrow(Pb_noO_g),nrow(Pb_noO_s))
df_smaller1 = df[!is.na(df$orthology),]
df_smaller1 = df_smaller1[df_smaller1$model == 'Pf3D7',]
df_smaller1a = df_smaller1[df_smaller1$biomass == 'generic',]
df_smaller1b = df_smaller1[df_smaller1$biomass == 'species',]
df_smaller2 = df[!is.na(df$orthology),]
df_smaller2 = df_smaller2[df_smaller2$model != 'PbANKA',]
df_smaller2a = df_smaller2[df_smaller2$biomass == 'generic',]
df_smaller2b = df_smaller2[df_smaller2$biomass == 'species',]
cbPalette = brewer.pal(n = 3, name = 'Dark2') # color blind friendly
ggplot() +
geom_point(data = df, aes(x = sensitivity, y = specificity, color = species, shape = biomass), alpha = 0.7) +
scale_color_manual(values = cbPalette) +
#geom_point(data = df_smaller1, aes(x = sensitivity, y = specificity, shape = biomass, size = `no. genes in model`), alpha = 0.4) +
geom_line(data = df_smaller1a, aes(x = sensitivity, y = specificity)) +
geom_line(data = df_smaller1b, aes(x = sensitivity, y = specificity)) +
#geom_point(data = df_smaller2, aes(x = sensitivity, y = specificity, shape = biomass, size = `no. genes in model`), alpha = 0.4) +
geom_line(data = df_smaller2a, aes(x = sensitivity, y = specificity)) +
geom_line(data = df_smaller2b, aes(x = sensitivity, y = specificity)) +
xlab('sensitivity\n(true pos. rate)') + ylab('specificity (true neg. rate)') + xlim(0,1) + ylim(0,1)
ggplot() +
geom_jitter(data = df, aes(x = sensitivity, y = specificity, color = species, shape = biomass), alpha = 0.7) +
scale_color_manual(values = cbPalette) +
#geom_point(data = df_smaller1, aes(x = sensitivity, y = specificity, shape = biomass, size = `no. genes in model`), alpha = 0.4) +
geom_line(data = df_smaller1a, aes(x = sensitivity, y = specificity)) +
geom_line(data = df_smaller1b, aes(x = sensitivity, y = specificity)) +
#geom_point(data = df_smaller2, aes(x = sensitivity, y = specificity, shape = biomass, size = `no. genes in model`), alpha = 0.4) +
geom_line(data = df_smaller2a, aes(x = sensitivity, y = specificity)) +
geom_line(data = df_smaller2b, aes(x = sensitivity, y = specificity)) +
xlab('sensitivity\n(true pos. rate)') + ylab('specificity (true neg. rate)')
ggplot() +
geom_jitter(data = df, aes(x = sensitivity, y = specificity, color = species, shape = biomass), alpha = 0.5) +
scale_color_manual(values = cbPalette) +
#geom_point(data = df_smaller1, aes(x = sensitivity, y = specificity, shape = biomass, size = `no. genes in model`), alpha = 0.4) +
geom_line(data = df_smaller1a, aes(x = sensitivity, y = specificity)) +
geom_line(data = df_smaller1b, aes(x = sensitivity, y = specificity)) +
#geom_point(data = df_smaller2, aes(x = sensitivity, y = specificity, shape = biomass, size = `no. genes in model`), alpha = 0.4) +
geom_line(data = df_smaller2a, aes(x = sensitivity, y = specificity)) +
geom_line(data = df_smaller2b, aes(x = sensitivity, y = specificity)) +
xlab('sensitivity\n(true pos. rate)') + ylab('specificity (true neg. rate)') + xlim(0,1) + ylim(0,1)
ggplot() +
geom_jitter(data = df, aes(x = sensitivity, y = specificity, color = species, shape = biomass), alpha = 0.5) +
scale_color_manual(values = cbPalette) +
#geom_point(data = df_smaller1, aes(x = sensitivity, y = specificity, shape = biomass, size = `no. genes in model`), alpha = 0.4) +
geom_line(data = df_smaller1a, aes(x = sensitivity, y = specificity)) +
geom_line(data = df_smaller1b, aes(x = sensitivity, y = specificity)) +
#geom_point(data = df_smaller2, aes(x = sensitivity, y = specificity, shape = biomass, size = `no. genes in model`), alpha = 0.4) +
geom_line(data = df_smaller2a, aes(x = sensitivity, y = specificity)) +
geom_line(data = df_smaller2b, aes(x = sensitivity, y = specificity)) +
xlab('sensitivity\n(true pos. rate)') + ylab('specificity (true neg. rate)')
ggplot() +
geom_point(data = df, aes(x = sensitivity, y = specificity, color = species, shape = biomass), alpha = 0.5) +
scale_color_manual(values = cbPalette) +
#geom_point(data = df_smaller1, aes(x = sensitivity, y = specificity, shape = biomass, size = `no. genes in model`), alpha = 0.4) +
geom_line(data = df_smaller1a, aes(x = sensitivity, y = specificity)) +
geom_line(data = df_smaller1b, aes(x = sensitivity, y = specificity)) +
#geom_point(data = df_smaller2, aes(x = sensitivity, y = specificity, shape = biomass, size = `no. genes in model`), alpha = 0.4) +
geom_line(data = df_smaller2a, aes(x = sensitivity, y = specificity)) +
geom_line(data = df_smaller2b, aes(x = sensitivity, y = specificity)) +
xlab('sensitivity\n(true pos. rate)') + ylab('specificity (true neg. rate)')
ggplot() +
geom_point(data = df, aes(x = sensitivity, y = specificity, color = species, shape = biomass), alpha = 0.5) +
scale_color_manual(values = cbPalette) +
#geom_point(data = df_smaller1, aes(x = sensitivity, y = specificity, shape = biomass, size = `no. genes in model`), alpha = 0.4) +
geom_line(data = df_smaller1a, aes(x = sensitivity, y = specificity)) +
geom_line(data = df_smaller1b, aes(x = sensitivity, y = specificity)) +
#geom_point(data = df_smaller2, aes(x = sensitivity, y = specificity, shape = biomass, size = `no. genes in model`), alpha = 0.4) +
geom_line(data = df_smaller2a, aes(x = sensitivity, y = specificity)) +
geom_line(data = df_smaller2b, aes(x = sensitivity, y = specificity)) +
xlab('sensitivity\n(true pos. rate)') + ylab('specificity (true neg. rate)') + xlim(0,1) + ylim(0,1)
ggplot() +
geom_point(data = df, aes(x = sensitivity, y = specificity, color = species, shape = biomass), alpha = 0.5) +
scale_color_manual(values = cbPalette) +
#geom_point(data = df_smaller1, aes(x = sensitivity, y = specificity, shape = biomass, size = `no. genes in model`), alpha = 0.4) +
geom_line(data = df_smaller1a, aes(x = sensitivity, y = specificity)) +
geom_line(data = df_smaller1b, aes(x = sensitivity, y = specificity)) +
#geom_point(data = df_smaller2, aes(x = sensitivity, y = specificity, shape = biomass, size = `no. genes in model`), alpha = 0.4) +
geom_line(data = df_smaller2a, aes(x = sensitivity, y = specificity)) +
geom_line(data = df_smaller2b, aes(x = sensitivity, y = specificity)) +
xlab('sensitivity\n(true pos. rate)') + ylab('specificity (true neg. rate)')
ggsave("~/local_documents/work/comparative_parasite_models/paradigm_manuscript/figures/supplemental_figure_compare_models.pdf")
setwd("~/local_documents/work/comparative_parasite_models/paradigm/data/gapfilling_additions/")
temp = list.files(pattern="gapfilling_additions*")
myfiles = lapply(temp, read.csv)
df = as.data.frame(matrix(NA))
prev_max = 0
alt_strategry = character()
for (i in 1:length(myfiles)) {
file = myfiles[[i]]
file$X = NULL
if (length(file$rxns_added)>prev_max) {prev_max = length(file$rxns_added)}
myfiles[[i]] = file
for (j in file$rxns_added) {
alt_strategry = c(alt_strategry, strsplit(as.character(j),":",fixed = T)[[1]][1])}}
setwd("~/local_documents/work/comparative_parasite_models/paradigm/data/gapfilling_additions/")
temp = list.files(pattern="gapfilling_additions*")
myfiles = lapply(temp, read.csv)
df = as.data.frame(matrix(NA))
prev_max = 0
alt_strategry = character()
for (i in 1:length(myfiles)) {
file = myfiles[[i]]
file$X = NULL
if (length(file$rxns_added)>prev_max) {prev_max = length(file$rxns_added)}
myfiles[[i]] = file
for (j in file$rxns_added) {
alt_strategry = c(alt_strategry, strsplit(as.character(j),":",fixed = T)[[1]][1])}}
tail(sort(table(alt_strategry)))
df = read.csv("/Users/maureencarey/local_documents/work/comparative_parasite_models/paradigm/data/rxn_presence_before_gapfilling_jan.csv")
rownames(Df)
rownames(df)
colnames(df)
df[df$X == 'SHK3Dr',]
na.omit(df[df$X == 'SHK3Dr',])
length(na.omit(df[df$X == 'SHK3Dr',]))
length(is.na(df[df$X == 'SHK3Dr',]))
length(na.omit(df[df$X == 'SHK3Dr',]))
is.na(df[df$X == 'SHK3Dr',])
length(df[is.na(df[df$X == 'SHK3Dr',])])
df[df$X == 'SHK3Dr',]
length([is.na(df[df$X == 'SHK3Dr',])])
is.na(df[df$X == 'SHK3Dr',])
length(df[df$X == 'SHK3Dr',[is.na(df[df$X == 'SHK3Dr',])]])
df[df$X == 'SHK3Dr',is.na(df[df$X == 'SHK3Dr',])]
length(df[df$X == 'SHK3Dr',is.na(df[df$X == 'SHK3Dr',])])
df[df$X == 'SHK3Dr',]
na.omit(df[df$X == 'SHK3Dr',])
length(df[df$X == 'SHK3Dr',!is.na(df[df$X == 'SHK3Dr',])])
df[df$X == 'SHK3Dr',!is.na(df[df$X == 'SHK3Dr',])]
length(df[df$X == 'SHK3Dr',is.na(df[df$X == 'SHK3Dr',])])
df = read.csv("/Users/maureencarey/local_documents/work/comparative_parasite_models/paradigm/data/rxn_essentiality_matrix_jan.csv")
df2 = read.csv("/Users/maureencarey/local_documents/work/comparative_parasite_models/paradigm/data/rxn_essentiality_matrix_interpreted_jan.csv")
rownames(df) = df$X; df$X = NULL
colnames(df) = sub("_generic_biomass", "", colnames(df))
rownames(df2) = df2$X; df2$X = NULL
#df = df[, -c(4,6,8)]
sum_df <- data.frame(matrix(data=NA,nrow=ncol(df2),ncol=5))
colnames(sum_df) = c('Species','biomass','lethal','nonlethal','percent')
for (x in 1:ncol(df2)) {
sum_df$Species[x] = strsplit(colnames(df2)[x], split = '_')[[1]][1]
sum_df$biomass[x] = strsplit(colnames(df2)[x], split = '_')[[1]][2]
sum_df$lethal[x] = table(df2[,x])[[1]]
sum_df$nonlethal[x] = table(df2[,x])[[2]]
sum_df$percent[x] = sum_df$lethal[x]/(sum_df$lethal[x]+sum_df$nonlethal[x])
}
library(cluster)
#df = df[,c(1,2,3,5,7,9,11,12,13)]# use only models with the same biomass
df = df[,c(1,2,3,5,9,11,12)]
df_use = t(df)
dist_df = daisy(df_use)
df_to_melt = as.matrix(dist_df)
df_to_melt[upper.tri(df_to_melt)] <- NA
df_melt = melt(as.matrix(df_to_melt))
# mylabels = c(expression(paste(italic("T. gondii"), " GT1")),
#                expression(paste(italic("T. gondii"), " ME49")),
#                expression(paste(italic("P. falciparum"), " 3D7")),
#                expression(paste(italic("P. berghei"), " ANKA")),
#                expression(paste(italic("P. cynomolgi"), " B")),
#                expression(paste(italic("P. vivax"), " Sal-1")),
#                expression(paste(italic("C. hominis"), " TU502_2012")),
#                expression(paste(italic("C. parvum"), " Iowa II")),
#                expression(paste(italic("P. knowlesi"), " H")))
mylabels = c(expression(paste(italic("T. gondii"), " GT1")),
expression(paste(italic("T. gondii"), " ME49")),
expression(paste(italic("P. falciparum"), " 3D7")),
expression(paste(italic("P. berghei"), " ANKA")),
expression(paste(italic("P. vivax"), " Sal-1")),
expression(paste(italic("C. hominis"), " TU502_2012")),
expression(paste(italic("C. parvum"), " Iowa II")))
ggplot(data = df_melt,
aes(x = Var1, y = Var2, fill = value)) +
geom_tile(width=0.95, height=0.95, size=2) +
scale_fill_gradient(low = "ghostwhite", high = "black",na.value = 'white',
name= 'Essentiality',
breaks=c(0,37.5),labels=c("Same","Different"),
limits=c(0,37.5)) +
scale_y_discrete(labels = mylabels, position = "right") +
scale_x_discrete(labels = mylabels) +
theme_void() +
theme(axis.text.x = element_text(size = 9, angle = 45, hjust = 1, vjust = 1),
axis.text.y = element_text(size = 9, hjust = 0),
axis.ticks.x = element_blank(),
plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
legend.justification = c(1, 0),
legend.position = c(0.6, 0.7),
legend.direction = "horizontal") +
coord_fixed()+
xlab(NULL) + guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5)) +
ggtitle(NULL) + ylab(NULL)
ggsave("~/local_documents/work/comparative_parasite_models/paradigm_manuscript/figures/fig3/essentiality_heatmap.pdf",width = 5,height = 5,units = "in",dpi = 600)
# normalized growth for KOs
df_temp = as.matrix(df)
df_try = apply(df_temp, 2, function(x) {cut(x, breaks = c(-10,-0.000001,0.1,1,10))})
rownames(df_try) = rownames(df_temp)
df_try = as.data.frame(df_try)
sim_cond = (df_try[,c(1,2,6,7)])
dif_cond = (df_try[,c(3,4,5)])
for (i in 1:nrow(sim_cond)) {
if (!(is.na(sim_cond$TgondiiGT1[i])) & (sim_cond$TgondiiGT1[i] == levels(sim_cond$TgondiiGT1)[1])) {
if (!(is.na(sim_cond$TgondiiME49[i])) & (sim_cond$TgondiiGT1[i] == sim_cond$TgondiiME49[i])) {
if (!(is.na(sim_cond$ChominisTU502_2012[i])) & (sim_cond$TgondiiGT1[i] == sim_cond$ChominisTU502_2012[i])) {
if (!(is.na(sim_cond$CparvumIowaII[i])) & (sim_cond$TgondiiGT1[i] == sim_cond$CparvumIowaII[i])) {
if (rownames(sim_cond)[i] %in% rownames(dif_cond)) {
row_of_interest = dif_cond[rownames(dif_cond) == rownames(sim_cond)[i],]
if (is.na(row_of_interest$PbergheiANKA) | is.na(row_of_interest$Pfalciparum3D7)) {
print(rownames(sim_cond[i,]))}
else if ((row_of_interest$PbergheiANKA != levels(sim_cond$TgondiiGT1)[1]) &
(row_of_interest$Pfalciparum3D7 != levels(sim_cond$TgondiiGT1)[1])) {
print(rownames(sim_cond[i,])) }
}}}}}}
for (i in 1:nrow(sim_cond)) {
if (!(is.na(sim_cond$TgondiiGT1[i])) & (sim_cond$TgondiiGT1[i] == levels(sim_cond$TgondiiGT1)[1])) {
if (!(is.na(sim_cond$TgondiiME49[i])) & (sim_cond$TgondiiGT1[i] == sim_cond$TgondiiME49[i])) {
if (!(is.na(sim_cond$ChominisTU502_2012[i])) & (sim_cond$TgondiiGT1[i] != sim_cond$ChominisTU502_2012[i])) {
if (!(is.na(sim_cond$CparvumIowaII[i])) & (sim_cond$TgondiiGT1[i] != sim_cond$CparvumIowaII[i])) {
if (rownames(sim_cond)[i] %in% rownames(dif_cond)) {
row_of_interest = dif_cond[rownames(dif_cond) == rownames(sim_cond)[i],]
if ((row_of_interest$PbergheiANKA == levels(sim_cond$TgondiiGT1)[1]) &
(row_of_interest$Pfalciparum3D7 == levels(sim_cond$TgondiiGT1)[1])) {
print(rownames(sim_cond[i,])) }
}}}}}}
for (i in 1:nrow(sim_cond)) {
if (!(is.na(sim_cond$TgondiiGT1[i])) & (sim_cond$TgondiiGT1[i] == levels(sim_cond$TgondiiGT1)[1])) {
if (!(is.na(sim_cond$TgondiiME49[i])) & (sim_cond$TgondiiGT1[i] == sim_cond$TgondiiME49[i])) {
if (rownames(sim_cond)[i] %in% rownames(dif_cond)) {
row_of_interest = dif_cond[rownames(dif_cond) == rownames(sim_cond)[i],]
if ((row_of_interest$PbergheiANKA == levels(sim_cond$TgondiiGT1)[1]) &
(row_of_interest$Pfalciparum3D7 == levels(sim_cond$TgondiiGT1)[1])) {
print(rownames(sim_cond[i,])) }
}}}}
for (i in 1:nrow(sim_cond)) {
if (!(is.na(sim_cond$TgondiiGT1[i])) & (sim_cond$TgondiiGT1[i] == levels(sim_cond$TgondiiGT1)[1])) {
if (!(is.na(sim_cond$TgondiiME49[i])) & (sim_cond$TgondiiGT1[i] == sim_cond$TgondiiME49[i])) {
if (rownames(sim_cond)[i] %in% rownames(dif_cond)) {
row_of_interest = dif_cond[rownames(dif_cond) == rownames(sim_cond)[i],]
if (!(is.na(row_of_interest$PbergheiANKA)) & !(is.na(row_of_interest$Pfalciparum3D7)) &
(row_of_interest$PbergheiANKA == levels(sim_cond$TgondiiGT1)[1]) &
(row_of_interest$Pfalciparum3D7 == levels(sim_cond$TgondiiGT1)[1])) {
print(rownames(sim_cond[i,])) }
}}}}
length(temp)
#
setwd("~/local_documents/work/comparative_parasite_models/paradigm/data/gapfilling_additions/")
temp = list.files(pattern="gapfilling_additions*")
length(temp)
tritrypdb = c("BayalaiB08.376","CfasciculataCfCl","EmonterogeiiLV88","LaethiopicaL147", "LarabicaLEM1108", "LbraziliensisMHOMBR75M2903", "LbraziliensisMHOMBR75M2904", "LdonovaniBPK282A1", "LenriettiiLEM3045", "LgerbilliLEM452","LinfantumJPCM5", "LmajorFriedlin", "LmajorLV39c5", "LmajorSD75", "LmexicanaMHOMGT2001U1103", "LpanamensisMHOMCOL81L13","LpanamensisMHOMPA94PSC1", "LpyrrhocorisH10", "LseymouriATCC30220", "LspMARLEM2494", "LtarentolaeParrotTarII", "LtropicaL590", "LturanicaLEM423", "PconfusumCUL13","TbruceigambienseDAL972", "TbruceiLister427", "TbruceiTREU927", "TcongolenseIL3000", "TcruziCLBrener", "TcruziCLBrenerEsmeraldo.like", "TcruziCLBrenerNon.Esmeraldo.like", "TcruzicruziDm28c","TcruziDm28c", "TcruzimarinkelleiB7", "TcruziSylvioX10.1", "TcruziSylvioX10.1.2012","TevansiSTIB805", "TgrayiANR4", "TrangeliSC58", "TvivaxY486", "TtheileriEdinburgh")
length(tritrypdb)
41-13
